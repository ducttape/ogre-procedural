cmake_minimum_required(VERSION 2.6)

# Just debug / release since that's all that's included in SDK
set (CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "" FORCE)


project(PROCEDURAL)

# Find actual Procedural root
if (WIN32 OR APPLE)
  get_filename_component(PROCEDURAL_ROOT_DIR "${PROCEDURAL_SOURCE_DIR}" ABSOLUTE)
  set(PROCEDURAL_TEMPLATES_DIR "${PROCEDURAL_ROOT_DIR}/cmake")
  set(PROCEDURAL_WORK_DIR "${PROCEDURAL_ROOT_DIR}")
  set(CMAKE_MODULE_PATH "${PROCEDURAL_ROOT_DIR}/cmake")
elseif (UNIX)
  get_filename_component(PROCEDURAL_ROOT_DIR "${PROCEDURAL_SOURCE_DIR}/../.." ABSOLUTE)
  set(PROCEDURAL_TEMPLATES_DIR "${PROCEDURAL_ROOT_DIR}/lib/PROCEDURAL/cmake")
  set(PROCEDURAL_WORK_DIR "${PROCEDURAL_ROOT_DIR}")
  set(CMAKE_MODULE_PATH "${OGRE_ROOT_DIR}/lib/OGRE/cmake")
endif ()

set(PROCEDURAL_VERSION_DASH_SEPARATED "0.2")

set(CMAKE_PREFIX_PATH "${PROCEDURAL_ROOT_DIR}")

set(CMAKE_DEBUG_POSTFIX "_d")

if (WIN32 OR APPLE)
  if (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    set(CMAKE_INSTALL_PREFIX
	  "${PROCEDURAL_BINARY_DIR}/sdk" CACHE PATH "PROCEDURAL install prefix" FORCE
    )
  endif (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
endif(WIN32 OR APPLE)


get_filename_component(PROCEDURAL_ROOT "${PROCEDURAL_SOURCE_DIR}" ABSOLUTE)

find_package(OGRE REQUIRED)
find_package(OIS REQUIRED)
find_package(PROCEDURAL REQUIRED)

option(PROCEDURAL_BUILD_SAMPLES "Build OgreProcedural samples." TRUE)

# Specify build paths
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROCEDURAL_BINARY_DIR}/lib")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROCEDURAL_BINARY_DIR}/lib")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROCEDURAL_BINARY_DIR}/bin")

set(PROCEDURAL_TEMPLATES_DIR "${PROCEDURAL_SOURCE_DIR}/CMake")
set(PROCEDURAL_WORK_DIR ${PROCEDURAL_BINARY_DIR})

include_directories(
  ${OGRE_INCLUDE_DIRS}
  ${OIS_INCLUDE_DIRS}
  ${PROCEDURAL_INCLUDE_DIRS}
)

include(ProceduralMacros)
add_subdirectory(samples)